---
- hosts: kuber
  become: yes
  gather_facts: no

  tasks:
    - name: Disable swap
      ansible.builtin.shell: 'swapoff -a'
    
    - name: Remove swap from fstab
      ansible.builtin.mount:
        name: "{{ item }}"
        fstype: swap
        state: absent
      with_items:
        - swap
        - none
    
    - name: Add line a file /etc/modules-load.d/containerd.conf
      ansible.builtin.lineinfile:
        path: /etc/modules-load.d/containerd.conf
        line: "{{ item.line }}"
      with_items:
      - { line: 'overlay'}
      - { line: 'br_netfilter'}
    
    - name: Load overlay
      ansible.builtin.shell: 'modprobe overlay'
    
    - name: Load br_netfilter
      ansible.builtin.shell: 'modprobe br_netfilter'
    
    - name: Add line a file /etc/sysctl.d/kubernetes.conf
      ansible.builtin.lineinfile:
        path: /etc/sysctl.d/kubernetes.conf
        line: "{{ item.line }}"
      with_items:
      - { line: 'net.bridge.bridge-nf-call-ip6tables = 1'}
      - { line: 'net.bridge.bridge-nf-call-iptables = 1'}
      - { line: 'net.ipv4.ip_forward = 1'}
    
    - name: Reload core
      ansible.builtin.shell: 'sysctl --system'

    - name: Install apt-transport-https ca-certificates curl gpg
      ansible.builtin.apt:
        pkg: 
        - apt-transport-https 
        - ca-certificates 
        - curl 
        - gpg
        - gnupg2
        - software-properties-common
        state: present
        update_cache: true

    - name: Config conrainer set default
      ansible.builtin.shell: 'containerd config default | sudo tee /etc/containerd/config.toml >/dev/null 2>&1'

    - name: Config edit /etc/containerd/config.toml
      ansible.builtin.shell: 'sed -i "s/SystemdCgroup \= false/SystemdCgroup \= true/g" /etc/containerd/config.toml'
    
    - name: Restart containerd
      ansible.builtin.service:
        name: containerd
        state: restarted
    
    - name: Enable service containerd
      ansible.builtin.service:
        name: containerd
        enabled: yes

    - name: Added key kuber
      ansible.builtin.apt_key:
        url: https://pkgs.k8s.io/core:/stable:/v1.29/deb/Release.key
        state: present
    
    - name: Add Repository Kubernetes
      ansible.builtin.apt_repository:
        repo: deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v1.29/deb/ /
        state: present
    
    - name: Update apt and install kubeadm kubelet kubectl
      ansible.builtin.apt:
        pkg: 
        - kubeadm 
        - kubelet 
        - kubectl
        state: present
        update_cache: true
        
    - name: Hold kubeadm
      ansible.builtin.dpkg_selections:
        name: kubeadm
        selection: hold
    
    - name: Hold kubelet
      ansible.builtin.dpkg_selections:
        name: kubelet
        selection: hold
    
    - name: Hold kubectl
      ansible.builtin.dpkg_selections:
        name: kubectl
        selection: hold
    
    - name: Restart kubelet
      ansible.builtin.service:
        name: kubelet
        state: restarted 
    
- hosts: master
  become: yes
  gather_facts: no

  tasks:
    - name: Download manifest for Calico
      ansible.builtin.get_url:
        url: https://calico-v3-25.netlify.app/archive/v3.25/manifests/calico.yaml
        dest: /tmp/calico.yaml
    
    - name: Deploy Calico
      ansible.builtin.shell: 'kubectl apply -f calico.yaml'